{{- if .Values.dundas.bi.authbridge.enabled -}}
kind: {{ .Values.dundas.bi.authbridge.kind }}
apiVersion: apps/v1
metadata:
  name: qinsight-ui-authbridge
  labels:
    {{- include "dundas-bi.labels" . | nindent 4 }}
    app: dundas-bi-authbridge
spec:
{{ if eq .Values.dundas.bi.authbridge.kind "StatefulSet" }}  
  serviceName: {{ .Release.Name }}-dundas-bi-authbridge
  updateStrategy: 
    type: RollingUpdate
{{ else }}    
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1    
      maxUnavailable: 0
{{- end }}
{{- if not .Values.dundas.bi.authbridge.autoscaling.enabled }}
  replicas: {{ .Values.dundas.bi.authbridge.replicaCount }}
{{- end }}
  
  selector:
    matchLabels:
      app: dundas-bi-authbridge
      {{- include "dundas-bi.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        app: dundas-bi-authbridge
        {{- include "dundas-bi.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}    
      initContainers:
        - name: wait-for-dundasbi-website
          {{ if .Values.dundas.bi.setup.image.override.enabled }}
          image: '{{ .Values.dundas.bi.setup.image.override.name }}'
          {{ else }}
          image: '{{ .Values.dundas.bi.defaultImageRepository }}/dundas-bi-setup:{{ .Values.dundas.bi.version }}' 
          {{ end }}    
          command: ['sh', '-c', "/usr/share/dotnet/dotnet /usr/share/dundas/bi/deployment/noversion/DeploymentConsole.dll --container --nonroot || echo 'done'" ]
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          resources:
            {{- toYaml .Values.dundas.bi.authbridge.resources | nindent 12 }}
          env:
            - name: A180BB4E4AE416297A0AAC7FACFCB751
              value: "ScheduleWait"
            - name: DUNDAS_BI_INTERNAL_APPLICATION_URL
              value: "http://{{ .Release.Name }}-dundas-bi-website{{ if ne .Release.Namespace "default" }}.{{ .Release.Namespace }}{{- end -}}:{{ .Values.dundas.bi.website.port }}/"      
      containers:
        - name: {{ .Chart.Name }}
          {{ if .Values.dundas.bi.authbridge.image.override.enabled }}
          image: '{{ .Values.dundas.bi.authbridge.image.override.name }}'
          {{ else }}
          image: '{{ .Values.dundas.bi.defaultImageRepository }}/dundas-bi-authbridge:{{ .Values.dundas.bi.version }}' 
          {{ end }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          {{- if .Values.dundas.bi.authbridge.livenessProbe }}
          livenessProbe:
          {{ toYaml .Values.dundas.bi.authbridge.livenessProbe | nindent 12  }}
          {{- end }}
          {{- if .Values.dundas.bi.authbridge.readinessProbe }}
          readinessProbe:
          {{ toYaml .Values.dundas.bi.authbridge.readinessProbe | nindent 12  }}
          {{- end }}
          env:
            {{ if .Values.dundas.bi.appDb.express }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}
                  key: postgres-password
            {{ end }}
            - name: DUNDAS_BI_APP_DB_CONN_STRING
            {{ if .Values.dundas.bi.appDb.express }}
              value: "Host={{ .Release.Name }}-dundas-bi-database; Database=Dundas BI {{ .Release.Name }}; Username=postgres;Password=$(POSTGRES_PASSWORD)"
            {{ else }}
              valueFrom:
                {{ if .Values.dundas.bi.appDb.useExistingSecretForAppDbConnString }}
                secretKeyRef:
                  name:  {{ .Values.dundas.bi.appDb.secretKeyRef.appDbConnStringSecretName }}
                  key: {{ .Values.dundas.bi.appDb.secretKeyRef.appDbConnStringSecretKey }}
                {{ else }}
                secretKeyRef:
                  name: {{ .Release.Name }}
                  key: DBI_CONNECTION_STRING
                {{ end }}
            {{ end }}
            - name: DUNDAS_BI_APP_STORAGE
            {{ if .Values.dundas.bi.appDb.express }}
              value: Postgres
            {{ else }}
              value: {{ .Values.dundas.bi.appDb.appStorage }}
            {{ end }}
            {{ if .Values.dundas.bi.startCommand }}
            - name: DUNDAS_BI_STARTUP_COMMAND
              value: "{{ .Values.dundas.bi.startCommand }}"
            {{ end }}
            {{ if .Values.dundas.bi.deploymentMode }}
            - name: DUNDAS_BI_DEPLOYMENT_MODE 
              value: "{{ .Values.dundas.bi.deploymentMode }}"
            {{ end }}
          resources:
            {{- toYaml .Values.dundas.bi.authbridge.resources | nindent 12 }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
        - name: {{ .Chart.Name }}-authbridge-reverseproxy
          {{ if .Values.dundas.bi.authbridge.reverseproxy.image.override.enabled }}
          image: '{{ .Values.dundas.bi.authbridge.reverseproxy.image.override.name }}'
          {{ else }}
          image: '{{ .Values.dundas.bi.defaultImageRepository }}/dundas-bi-reverseproxy:{{ .Values.dundas.bi.version }}' 
          {{ end }}    
          resources:
            {{- toYaml .Values.dundas.bi.authbridge.reverseproxy.resources | nindent 12 }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: DUNDAS_BI_X_PROXY_BASE_PATH
              value: {{ .Values.dundas.bi.virtualDirectoryPath | trimSuffix "/" }}/AuthBridge
            - name: DUNDAS_BI_NGINX_REWRITE
              value: (?i)/{{ .Values.dundas.bi.virtualDirectoryPath | trimPrefix "/" }}AuthBridge/(.*)
          ports:
          - name: nginxhttp
            containerPort: 8000
            protocol: TCP    
          volumeMounts:
          {{- if .Values.dundas.bi.extraVolumeMounts }}
          {{ toYaml .Values.dundas.bi.extraVolumeMounts | nindent 12  }}
          {{- end }}
      volumes:      
      {{- if .Values.dundas.bi.extraVolumes }}
{{ toYaml .Values.dundas.bi.extraVolumes | indent 8 }}
      {{- end }}
      restartPolicy: Always
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}

