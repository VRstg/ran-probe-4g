kind: {{ .Values.dundas.bi.website.kind }}
apiVersion: apps/v1
metadata:
  name: qinsight-ui-website
  labels:
    {{- include "dundas-bi.labels" . | nindent 4 }}
    app: dundas-bi-website
spec:
{{ if eq .Values.dundas.bi.website.kind "StatefulSet" }}  
  serviceName: {{ .Release.Name }}-dundas-bi-website
  updateStrategy: 
    type: RollingUpdate
{{ else }}    
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1    
      maxUnavailable: 0
{{- end }}
{{- if not .Values.dundas.bi.website.autoscaling.enabled }}
  replicas: {{ .Values.dundas.bi.website.replicaCount }}
{{- end }}
  
  selector:
    matchLabels:
      app: dundas-bi-website
      {{- include "dundas-bi.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        app: dundas-bi-website
        {{- include "dundas-bi.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        - name: handledatabase
          {{ if .Values.dundas.bi.setup.image.override.enabled }}
          image: '{{ .Values.dundas.bi.setup.image.override.name }}'
          {{ else }}
          image: '{{ .Values.dundas.bi.defaultImageRepository }}/dundas-bi-setup:{{ .Values.dundas.bi.version }}' 
          {{ end }}
          command: ['sh', '-c', "/tmp/Entrypoint.sh || echo 'done'" ]
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          resources:
            {{- toYaml .Values.dundas.bi.website.resources | nindent 12 }}
          volumeMounts:    
            - name: dundasshare
              mountPath: /dundas-bi-share/
          {{- if .Values.dundas.bi.website.extraVolumeMounts }}
          {{ toYaml .Values.dundas.bi.website.extraVolumeMounts | nindent 12  }}
          {{- end }}
          {{- if .Values.dundas.bi.extraVolumeMounts }}
          {{ toYaml .Values.dundas.bi.extraVolumeMounts | nindent 12  }}
          {{- end }}
          env:
            - name: DUNDAS_BI_CREATE_SHARED_DBI_CONFIG
              value: "true"
           {{- if .Values.dundas.bi.gatewayhub }}
           {{- if .Values.dundas.bi.gatewayhub.enabled }}
           {{- if .Values.dundas.bi.gatewayhub.service.enabled }}
            - name: DUNDAS_BI_DT_ON_LOAD_CALL_0_GATEWAY_URL
              value: "setConfigValue /settingId:\"8d8977cb-379b-470f-938a-7ee02aebae51\" /value:\"http://{{ .Release.Name }}-dundas-bi-gatewayhub{{ if ne .Release.Namespace "default" }}.{{ .Release.Namespace }}{{- end -}}:{{ .Values.dundas.bi.gatewayhub.port }}/Gateway/\""     
           {{- end }}
           {{- end }}
           {{- end }}
           {{ if .Values.dundas.bi.deploymentMode }}
            - name: DUNDAS_BI_DEPLOYMENT_MODE 
              value: "{{ .Values.dundas.bi.deploymentMode }}"
            {{ end }}
            - name: DUNDAS_BI_SETUP_ORCHESTRATOR_URL
            {{ if or .Values.dundas.bi.website.autoscaling.enabled (gt .Values.dundas.bi.website.replicaCount 1.0)  }}
              value: "http://{{ .Release.Name }}-dundas-bi-setup-orchestrator{{ if ne .Release.Namespace "default" }}.{{ .Release.Namespace }}{{- end -}}:8080/"
            {{ else }}
              value: ""
            {{ end }}
            {{ if .Values.dundas.bi.appDb.express }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}
                  key: postgres-password
            {{ end }}
            {{ if or (.Values.dundas.bi.appDb.express) (.Values.dundas.bi.password.setAdminPassword) }}
            - name: DUNDAS_BI_ADMIN_PASSWORD
              {{ if .Values.dundas.bi.password.generateRandomPassword }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}
                  key: dundas-bi-admin-password 
              {{ else if .Values.dundas.bi.password.useExistingSecretForAdminPassword }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.dundas.bi.password.secretKeyRef.adminPasswordSecretName }}
                  key: {{ .Values.dundas.bi.password.secretKeyRef.adminPasswordSecretKey }}
              {{ else }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}
                  key: dundas-bi-admin-password 
              {{ end }}                  
            {{ end }}
            - name: DUNDAS_BI_APP_STORAGE
            {{ if .Values.dundas.bi.appDb.express }}
              value: Postgres
            {{ else }}
              value: {{ .Values.dundas.bi.appDb.appStorage }}
            {{ end }}
            - name: DUNDAS_BI_APP_DB_CONN_STRING
            {{ if .Values.dundas.bi.appDb.express }}
              value: "Host={{ .Release.Name }}-dundas-bi-database; Database=Dundas BI {{ .Release.Name }}; Username=postgres;Password=$(POSTGRES_PASSWORD)"
            {{ else }}
              valueFrom:
                {{ if .Values.dundas.bi.appDb.useExistingSecretForAppDbConnString }}
                secretKeyRef:
                  name:  {{ .Values.dundas.bi.appDb.secretKeyRef.appDbConnStringSecretName }}
                  key: {{ .Values.dundas.bi.appDb.secretKeyRef.appDbConnStringSecretKey }}
                {{ else }}
                secretKeyRef:
                  name: {{ .Release.Name }}
                  key: DBI_CONNECTION_STRING
                {{ end }}
           {{ end }}

           # Warehouse connection string section 
           {{ if .Values.dundas.bi.appDb.express }}
           # Do nothing express 
           {{ else }}
              {{ if or (.Values.dundas.bi.appDb.warehouseDbConnString) (.Values.dundas.bi.appDb.useExistingSecretForWarehouseDbConnString) }}
            - name: DUNDAS_BI_WAREHOUSE_DB_CONN_STRING
              valueFrom:
                secretKeyRef:
                 {{ if .Values.dundas.bi.appDb.useExistingSecretForWarehouseDbConnString }}
                  name:  {{ .Values.dundas.bi.appDb.secretKeyRef.warehouseDbConnStringSecretName }}
                  key: {{ .Values.dundas.bi.appDb.secretKeyRef.warehouseDbConnStringSecretKey }}    
                 {{ else }}
                  name: {{ .Release.Name }}
                  key: DBI_WAREHOUSE_CONNECTION_STRING
                 {{ end }}
              {{ end }}
           {{ end }}
           # End Warehouse connection string section 
            - name: "A160BB4E4AE416297A0AAC7FACFCB751"
              value: "HandleDatabase"   
            {{ if .Values.dundas.bi.adminEmail }}
            - name: "DUNDAS_BI_ADMIN_EMAIL_ADDRESS"
              value: {{ .Values.dundas.bi.adminEmail | quote }}
            {{ end }}
           {{- if not .Values.dundas.bi.appDb.express }}
             {{- if .Values.dundas.bi.appDb.appDbCreatorConnString }}
            - name: DUNDAS_BI_DB_CREATOR_APP_DB_CONNECTION_STRING
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}
                  key: DBI_CREATOR_CONNECTION_STRING
             {{- end }}
            {{- if .Values.dundas.bi.appDb.whDbCreatorConnString }}
            - name: DUNDAS_BI_DB_CREATOR_WH_DB_CONNECTION_STRING
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}
                  key: DBI_WAREHOUSE_CREATOR_CONNECTION_STRING
             {{- end }}
           {{- end}}
           {{- if .Values.dundas.bi.cloud }}
           {{- if .Values.dundas.bi.cloud.google }}
           {{- if .Values.dundas.bi.cloud.google.enabled }}
            - name: DUNDAS_BI_GCP_CREATE_DATABASE
              value: "true"
           {{- end }}
           {{- end }}
           {{- end }}
           {{ if and (.Values.dundas.bi.website.includeSchedulerAndAuthBridgeInWebsiteContainer) (ne .Values.dundas.bi.scheduler.enabled true) }}  
            - name: DUNDAS_BI_INTERNAL_APPLICATION_URL
              value: http://localhost:8080/
           {{ else }}
            - name: DUNDAS_BI_INTERNAL_APPLICATION_URL
              value: "http://{{ .Release.Name }}-dundas-bi-website{{ if ne .Release.Namespace "default" }}.{{ .Release.Namespace }}{{- end -}}:{{ .Values.dundas.bi.website.port }}/"        
           {{ end }}
           {{ if .Values.dundas.bi.internalApplicationUrl }}
            - name: DUNDAS_BI_INTERNAL_APPLICATION_URL
              value: "{{ .Values.dundas.bi.internalApplicationUrl }}"
           {{ end }}
           
           {{ if .Values.ingress.enabled }}
           {{- if not .Values.dundas.bi.externalApplicationUrl  }}
           {{- range $host := .Values.ingress.hosts }}
           {{- range .paths }}
            - name: DUNDAS_BI_EXTERNAL_APPLICATION_URL
              value: http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ . }}{{ $.Values.dundas.bi.virtualDirectoryPath | trimPrefix "/" }}
           {{- end }}
           {{- end }}
           {{- end }}
           {{ end }} 
           {{ if .Values.dundas.bi.externalApplicationUrl }}
            - name: DUNDAS_BI_EXTERNAL_APPLICATION_URL
              value: "{{ .Values.dundas.bi.externalApplicationUrl }}"
           {{ end }}

            - name: DUNDAS_BI_DOCKER_EMAIL
              value: "{{ .Values.dundas.bi.key.email }}"
            - name: DUNDAS_BI_DOCKER_KEY
              value: "{{ .Values.dundas.bi.key.key }}"
            {{ if .Values.dundas.bi.startCommand }}
            - name: DUNDAS_BI_STARTUP_COMMAND
              value: "{{ .Values.dundas.bi.startCommand }}"
            {{ end }}
            {{- range $index, $call := .Values.dundas.bi.dt.setup.calls.afterDatabaseCreation }}
            - name: DUNDAS_BI_DT_AFTER_DATABASE_CREATION_CALL_{{ $index }}
              value: {{ $call | quote }}
            {{- end }}
            {{- range $index, $call := .Values.dundas.bi.dt.setup.calls.onLoad }}
            - name: DUNDAS_BI_DT_ON_LOAD_CALL_{{ $index }}
              value: {{ $call | quote }}
            {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          {{ if .Values.dundas.bi.website.image.override.enabled }}
          image: '{{ .Values.dundas.bi.website.image.override.name }}'
          {{ else if .Values.dundas.bi.website.includeSchedulerAndAuthBridgeInWebsiteContainer }}
          image: '{{ .Values.dundas.bi.defaultImageRepository }}/dundas-bi-full:{{ .Values.dundas.bi.version }}' 
          {{ else }}
          image: '{{ .Values.dundas.bi.defaultImageRepository }}/dundas-bi-website:{{ .Values.dundas.bi.version }}' 
          {{ end }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP    
          {{- if .Values.dundas.bi.website.livenessProbe }}
          livenessProbe:
          {{ toYaml .Values.dundas.bi.website.livenessProbe | nindent 12  }}
          {{- end }}
          {{- if .Values.dundas.bi.website.readinessProbe }}
          readinessProbe:
          {{ toYaml .Values.dundas.bi.website.readinessProbe | nindent 12  }}
          {{- end }}
          env:  
            - name: DUNDAS_BI_FORCE_ENGINE_LOGGING_VERBOSE 
            {{ if .Values.dundas.bi.website.verbose }}
              value: "true"
            {{ else }}
              value: "false"
            {{ end }}
            {{ if .Values.dundas.bi.startCommand }}
            - name: DUNDAS_BI_STARTUP_COMMAND
              value: "{{ .Values.dundas.bi.startCommand }}"
            {{ end }}
            {{ if .Values.dundas.bi.deploymentMode }}
            - name: DUNDAS_BI_DEPLOYMENT_MODE 
              value: "{{ .Values.dundas.bi.deploymentMode }}"
            {{ end }}
            {{ if .Values.dundas.bi.virtualDirectoryPath }}
            - name: DUNDAS_BI_X_PROXY_BASE_PATH
              value: {{ .Values.dundas.bi.virtualDirectoryPath | quote }}        
            {{ end }}
          resources:
            {{- toYaml .Values.dundas.bi.website.resources | nindent 12 }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          volumeMounts:  
            - name: dundasshare
              mountPath: /dundas-bi-share/
          {{- if .Values.dundas.bi.website.extraVolumeMounts }}
          {{ toYaml .Values.dundas.bi.website.extraVolumeMounts | nindent 12  }}
          {{- end }}
          {{- if .Values.dundas.bi.extraVolumeMounts }}
          {{ toYaml .Values.dundas.bi.extraVolumeMounts | nindent 12  }}
          {{- end }}
          
          # Virtual Directory
          {{ if .Values.dundas.bi.virtualDirectoryPath }}
        - name: {{ .Chart.Name }}-reverseproxy
          {{ if .Values.dundas.bi.website.reverseproxy.image.override.enabled }}
          image: '{{ .Values.dundas.bi.website.reverseproxy.image.override.name }}'
          {{ else }}
          image: '{{ .Values.dundas.bi.defaultImageRepository }}/dundas-bi-reverseproxy:{{ .Values.dundas.bi.version }}' 
          {{ end }}    
          resources:
            {{- toYaml .Values.dundas.bi.website.reverseproxy.resources | nindent 12 }}
          env:
            - name: DUNDAS_BI_X_PROXY_BASE_PATH
              value: {{ .Values.dundas.bi.virtualDirectoryPath | trimSuffix "/" }}
            - name: DUNDAS_BI_NGINX_REWRITE
              value: (?i){{ .Values.dundas.bi.virtualDirectoryPath | trimSuffix "/" }}/(.*)
          ports:
          - name: webnginxhttp
            containerPort: 8000
            protocol: TCP    
          volumeMounts:
          {{- if .Values.dundas.bi.extraVolumeMounts }}
          {{ toYaml .Values.dundas.bi.extraVolumeMounts | nindent 12  }}
          {{- end }}
          {{ end }}
          # End Virtual Directory
          
      volumes:
        - name: dundasshare
          emptyDir: {}
      {{- if .Values.dundas.bi.website.extraVolumes }}
{{ toYaml .Values.dundas.bi.website.extraVolumes | indent 8 }}
      {{- end }}
      {{- if .Values.dundas.bi.setup.extraVolumes }}
{{ toYaml .Values.dundas.bi.setup.extraVolumes | indent 8 }}
      {{- end }}
      {{- if .Values.dundas.bi.extraVolumes }}
{{ toYaml .Values.dundas.bi.extraVolumes | indent 8 }}
      {{- end }}
      restartPolicy: Always
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}


